---
title: Aula Prática 3<br><br>
title-slide-attributes:
    data-background-size: contain
    data-background-position-x: center
    data-background-position-y: center
---

## Observações Importantes {}
::: {.fontsize80}
::: {.nonincremental}

A realização dos exercícios nas **aulas práticas é primordial** para que você consiga **consolidar os conceitos** aprendidos nas **aulas teóricas** (aulas não presenciais - ANP) e **colocá-los em prática** utilizando a linguagem de programação Java.

- No entanto, para **conseguir realizar os exercícios** das aulas práticas é **fundamental** que você tenha **estudado**, [antes das aulas práticas]{.underline}, o **conteúdo** das aulas teóricas (ANP) disponibilizadas pelo professor. 

Vale ressaltar que, **para ter presença** nas **aulas práticas**, além de **comparecer às aulas**, o aluno deve **realizar e entregar os exercícios** propostos nas aulas.

- Portanto, **não esqueça de entregar no Campus Virtual** os exercícios **até o término das aulas práticas** (mesmo que não tenha terminado-os completamente).
:::
:::


## Contextualização

Para realização da aula de hoje é **fundamental que você já tenha trabalhado** com o projeto [Figuras]{.alert} na IDE [BlueJ]{.alert}.

- **Criando** pelo menos alguns **objetos** das classes `Quadrado`, `Circulo`, `Triangulo` e `Pessoa`.
- **Chamando** os **métodos**: `moverVertical`, `moverHorizontal`, `mudarTamanho`, `mudarCor` e `exibir`. 

. . .

Na aula prática de hoje, inicialmente, trabalharemos a **criação de objetos** e **chamada de métodos** dos objetos criados **utilizando** a IDE **BlueJ**. Em seguida, repetiremos todo o processo de criação de objetos e chamada de métodos **sem utilizar** a **interface gráfica** da IDE **BlueJ** para realização **das tarefas**.


## Atividade

[Na aula de hoje começaremos **utilizando** a IDE **BlueJ**.]{.fontsize90}

. . .

:::{.nonincremental .fontsize90}
Vamos utilizar as classes do projeto `Figuras` disponibilizado no [Campus Virtual]{.alert}.

- Faça o download do projeto `Figuras` e, em seguida, abra-o utilizando a **IDE BlueJ**.
:::

. . .

::::{.columns style='display: flex !important; align-items: center;'}

::: {.column width="60%" .fontsize90}
::: {.nonincremental}
**Crie** todos os **objetos** necessários para **gerar a imagem** apresentada ao lado. Além de criar os objetos, você precisará **chamar** os seus **métodos** para gerar corretamente a imagem.

- **Anote** todas as **chamadas de métodos** com seus respectivos **parâmetros**, pois você precisará dessas informações na continuação desta aula prática.
:::
:::

::: {.column width="40%"}
![](figuras/cena.png){fig-alt="Projeto" fig-align="center" width=100%}
:::

::::


## Atividade

Agora **utilizaremos** a IDE **Visual Studio Code (VSCode)**.

. . .

:::{.nonincremental}
Continuaremos utilizando as classes do projeto `Figuras` disponibilizado no [Campus Virtual]{.alert}.

- Crie um projeto Java com o método **main** implementado numa classe denominada `App` e, portanto, salvo no arquivo **App.java**.
- Acrescente neste projeto todas as classes utilizadas no projeto `Figuras`, ou seja, os arquivos: **Circulo.java**, **Pessoa.java**, **Quadrado.java**, **Tela.java** e **Triangulo.java**.
  - Para isso, copie os arquivos **Circulo.java**, **Pessoa.java**, **Quadrado.java**, **Tela.java** e **Triangulo.java** na pasta **src** do projeto inicialmente criado no **VSCode**.
:::


## Atividade

:::{.nonincremental}
Agora acrescente no método **main** da classe `App` o código responsável pela criação de todos os objetos e as chamadas de seus métodos que resultam na criação da imagem apresentada anteriormente. 

- Para **cada objeto** a ser criado, você precisará **declarar uma variável** do **tipo da classe** daquele objeto. Essa **variável** irá **referenciar o objeto** criado e será **utilizada para chamada dos seus métodos**. Veja no **exemplo** a seguir o código utilizado na **criação de um objeto** do tipo `Pessoa` e a chamada do seu método `exibir`.

**Exemplo**

```{.java code-line-numbers="false"}
Pessoa pessoa1 = new Pessoa(); 
pessoa1.exibir();
```
:::


## Atividade

:::{.callout-note title="Entrega" icon=false}
Execute a sua implementação e verifique se ela está funcionando corretamente após a inclusão de código na classe `App`. Não deixe de **entregar** no Campus Virtual a **versão final da sua implementação**.
:::