---
title: Aula Prática 13<br><br>
title-slide-attributes:
    data-background-size: contain
    data-background-position-x: center
    data-background-position-y: center
---

## Observações Importantes {}
::: {.fontsize80}
::: {.nonincremental}

A realização dos exercícios nas **aulas práticas é primordial** para que você consiga **consolidar os conceitos** aprendidos nas **aulas teóricas** (aulas não presenciais - ANP) e **colocá-los em prática** utilizando a linguagem de programação Java.

- No entanto, para **conseguir realizar os exercícios** das aulas práticas é **fundamental** que você tenha **estudado**, [antes das aulas práticas]{.underline}, o **conteúdo** das aulas não presenciais disponibilizadas pelo professor. 

Vale ressaltar que, **para ter presença** nas **aulas práticas**, além de **comparecer às aulas**, o aluno deve **realizar e entregar os exercícios** propostos nas aulas.

- Portanto, **não esqueça de entregar no Campus Virtual** os exercícios **até o término das aulas práticas** (mesmo que não tenha terminado-os completamente).
:::
:::


## Contextualização

:::{.fontsize90}
Na aula de hoje **utilizaremos** a IDE **Visual Studio Code** ou **qualquer outra** de sua preferência (**exceto BlueJ**).
:::

. . .

:::{.fontsize90}
Hoje o **exercício** da **aula** **prática** tem como foco o tema **herança**. 
:::

. . .

:::{.fontsize90}
**Antes de começarem a codificar**, **leiam** o **enunciado** do exercício **com atenção** e entendam a **modelagem** do problema, ou seja, **quais** **classes** deverão implementar e **quais** serão os **atributos** e **métodos** de cada uma delas. E a partir de agora, lembrem-se que é necessário **verificar** se existe algum **relacionamento de herança** entre as classes!
:::


## Atividade
:::{.nonincremental .fontsize85}
Seguindo as boas práticas em programação orientada a objetos, implemente em Java um sistema gerenciador de frota de veículos de uma empresa que possui na sua frota carros e caminhões. 

Esse sistema engloba dois conceitos principais: frota e veículo. A frota é caracterizada pelas listas de veículos. Já os veículos são caracterizados pela sua marca (String), ano de fabricação (String), cor (String) e por dois atributos adicionais que variam de acordo com o tipo do veículo, conforme descrito a seguir. Enquanto um carro também é caracterizado pela sua capacidade do porta malas (int) e pelo número de portas (int), um caminhão também é caracterizado pelo seu número de eixos (int) e pela sua capacidade de carga (int). 
:::



## Atividade
:::{.nonincremental .fontsize85}
Implemente o esse sistema atendendo os seguintes requisitos:

- A classe `App` fornecida deve ser utilizada da forma como está, ou seja, sem sofrer qualquer alteração.
- Todas as classes relacionadas com veículos devem ter um método para retornar uma string contendo as informações das características dos veículos, as quais deverão ser impressas na tela a partir de um método denominado `exibirInformacoesVeiculos` que deve ser implementado na classe `Frota`. No slide a seguir tem-se um exemplo de como as informações devem ser impressas na tela. 
:::

## Atividade

:::{.callout-note title="Exemplo de saída de dados na tela gerado a partir do código da classe App" icon=false .fontsize70}
Marca: VW<br>
Ano: 2016<br>
Cor: branca<br>
Capacidade do Porta Malas: 280<br>
Número de Portas: 4

Marca: Fiat<br>
Ano: 2023<br>
Cor: preta<br>
Capacidade do Porta Malas: 300<br>
Número de Portas: 4

Marca: Mercedes<br>
Ano: 2001<br>
Cor: azul<br>
Número de Eixos: 4<br>
Capacidade de Carga: 1500

Marca: Iveco<br>
Ano: 2020<br>
Cor: cinza<br>
Número de Eixo: 5<br>
Capacidade de Carga: 2000
:::


## Atividade

```{.java code-line-numbers="false"}
public class App {
    public static void main(String[] args) throws Exception {
        Frota frota = new Frota();
        frota.adicionarCarro(new Carro("VW", "2016", "branca", 280, 4));
        frota.adicionarCarro(new Carro("Fiat", "2023", "preta", 300, 4));
        frota.adicionarCaminhao(new Caminhao("Mercedes", "2001", "azul", 4, 1500));
        frota.adicionarCaminhao(new Caminhao("Iveco", "2020", "cinza", 5, 2000));
        frota.exibirInformacoesVeiculos();
    }
}
```

:::{.callout-warning title="Atenção" icon=false .fontsize90}
Execute a sua implementação e verifique se ela está funcionando corretamente. **Entregue** no Campus Virtual a **versão final da implementação**.
:::